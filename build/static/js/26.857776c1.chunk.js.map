{"version":3,"sources":["utils/analytics.js","components/Page.js","../node_modules/@iconify/icons-eva/arrow-ios-back-fill.js","pages/authentication/VerifyCode.js"],"names":["setup","window","gtag","track","pageview","props","googleAnalyticsConfig","event","type","Page","forwardRef","ref","children","title","other","pathname","useLocation","sendPageViewEvent","useCallback","page_path","useEffect","Box","exports","__esModule","default","RootStyle","styled","display","minHeight","alignItems","padding","theme","spacing","VerifyCode","routeParams","useParams","sx","maxWidth","mx","size","component","RouterLink","to","PATH_AUTH","from","toLowerCase","startIcon","icon","arrowIosBackFill","width","height","mb","variant","paragraph","color","mt"],"mappings":"iNAIMA,EAAQ,WAAc,IAAD,EAIpBC,OAAOC,OAGZ,EAAAD,QAAOC,KAAP,oBAYaC,EATD,CACZC,SAAU,SAACC,GACTL,EAAM,SAAUM,IAAuBD,IAEzCE,MAAO,SAACC,EAAMH,GACZL,EAAM,QAASQ,EAAMH,K,OCRnBI,EAAOC,sBAAW,WAAqCC,GAAS,IAA3CC,EAA0C,EAA1CA,SAA0C,IAAhCC,aAAgC,MAAxB,GAAwB,EAAjBC,EAAiB,oCAC3DC,EAAaC,cAAbD,SAEFE,EAAoBC,uBAAY,WACpCf,EAAMC,SAAS,CACbe,UAAWJ,MAGZ,IAMH,OAJAK,qBAAU,WACRH,MACC,CAACA,IAGF,eAACI,EAAA,EAAD,yBAAKV,IAAKA,GAASG,GAAnB,cACE,cAAC,IAAD,UACE,gCAAQD,MAETD,SAUQH,O,mBCnCfa,EAAQC,YAAa,EACrBD,EAAQE,QANG,CACV,KAAQ,sJACR,MAAS,GACT,OAAU,K,kCCHX,8KAyBMC,EAAYC,YAAOjB,IAAPiB,EAAa,kBAAgB,CAC7CC,QAAS,OACTC,UAAW,OACXC,WAAY,SACZC,QAJ6B,EAAGC,MAIjBC,QAAQ,GAAI,OAKd,SAASC,IAEtB,IAAMC,EAAcC,YAAU,IAE9B,OACE,eAACV,EAAD,CAAWZ,MAAM,sBAAjB,UACE,cAAC,IAAD,IAEA,cAAC,IAAD,UACE,eAAC,IAAD,CAAKuB,GAAI,CAAEC,SAAU,IAAKC,GAAI,QAA9B,UACE,cAAC,IAAD,CACEC,KAAK,QACLC,UAAWC,IACXC,GAAIC,IAAU,GAAD,OAAIT,EAAYU,KAAKC,cAArB,UACbC,UAAW,cAAC,OAAD,CAAMC,KAAMC,IAAkBC,MAAO,GAAIC,OAAQ,KAC5Dd,GAAI,CAAEe,GAAI,GALZ,kBAUA,cAAC,IAAD,CAAYC,QAAQ,KAAKC,WAAS,EAAlC,sCAGA,cAAC,IAAD,CAAYjB,GAAI,CAAEkB,MAAO,kBAAzB,yIAOA,cAAC,IAAD,CAAKlB,GAAI,CAAEmB,GAAI,EAAGJ,GAAI","file":"static/js/26.857776c1.chunk.js","sourcesContent":["import { googleAnalyticsConfig } from '../config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst setup = (...args) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return;\r\n  }\r\n  if (!window.gtag) {\r\n    return;\r\n  }\r\n  window.gtag(...args);\r\n};\r\n\r\nconst track = {\r\n  pageview: (props) => {\r\n    setup('config', googleAnalyticsConfig, props);\r\n  },\r\n  event: (type, props) => {\r\n    setup('event', type, props);\r\n  }\r\n};\r\n\r\nexport default track;\r\n","import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { forwardRef, useEffect, useCallback } from 'react';\r\n// material\r\nimport { Box } from '@material-ui/core';\r\n// utils\r\nimport track from '../utils/analytics';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => {\r\n  const { pathname } = useLocation();\r\n\r\n  const sendPageViewEvent = useCallback(() => {\r\n    track.pageview({\r\n      page_path: pathname\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sendPageViewEvent();\r\n  }, [sendPageViewEvent]);\r\n\r\n  return (\r\n    <Box ref={ref} {...other}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </Box>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M13.83 19a1 1 0 0 1-.78-.37l-4.83-6a1 1 0 0 1 0-1.27l5-6a1 1 0 0 1 1.54 1.28L10.29 12l4.32 5.36a1 1 0 0 1-.78 1.64z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Icon } from \"@iconify/react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport arrowIosBackFill from \"@iconify/icons-eva/arrow-ios-back-fill\";\r\n// material\r\nimport { experimentalStyled as styled } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  // Link,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// layouts\r\nimport LogoOnlyLayout from \"../../layouts/LogoOnlyLayout\";\r\n// routes\r\nimport { PATH_AUTH } from \"../../routes/paths\";\r\n// components\r\nimport Page from \"../../components/Page\";\r\n// import { VerifyCodeForm } from \"../../components/authentication/verify-code\";\r\n// hooks\r\n// import useAuth from \"../../hooks/useAuth\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  display: \"flex\",\r\n  minHeight: \"100%\",\r\n  alignItems: \"center\",\r\n  padding: theme.spacing(12, 0),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyCode() {\r\n  // const { sendEmailVerification } = useAuth();\r\n  const routeParams = useParams({});\r\n\r\n  return (\r\n    <RootStyle title=\"Verify | Minimal UI\">\r\n      <LogoOnlyLayout />\r\n\r\n      <Container>\r\n        <Box sx={{ maxWidth: 480, mx: \"auto\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            component={RouterLink}\r\n            to={PATH_AUTH[`${routeParams.from.toLowerCase()}Login`]}\r\n            startIcon={<Icon icon={arrowIosBackFill} width={20} height={20} />}\r\n            sx={{ mb: 3 }}\r\n          >\r\n            Back\r\n          </Button>\r\n\r\n          <Typography variant=\"h3\" paragraph>\r\n            Please check your email!\r\n          </Typography>\r\n          <Typography sx={{ color: \"text.secondary\" }}>\r\n            {/* We have emailed a 6-digit confirmation code to acb@domain, please\r\n            enter the code in below box to verify your email. */}\r\n            Verify your E-Mail: Check you E-Mails (Spam folder included) for a\r\n            confirmation E-Mail or send another confirmation E-Mail.\r\n          </Typography>\r\n\r\n          <Box sx={{ mt: 5, mb: 3 }}>{/* <VerifyCodeForm /> */}</Box>\r\n\r\n          {/* <Typography variant=\"body2\" align=\"center\"> */}\r\n          {/* Donâ€™t have a code? &nbsp; */}\r\n          {/* <Link\r\n            variant=\"subtitle2\"\r\n            // underline=\"none\"\r\n            sx={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              sendEmailVerification();\r\n            }}\r\n          >\r\n            Send confirmation E-Mail\r\n          </Link> */}\r\n          {/* </Typography> */}\r\n        </Box>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}