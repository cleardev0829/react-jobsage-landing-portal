{"version":3,"sources":["utils/formatNumber.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/upload/UploadResumeFile.js","components/_external-pages/resume-upload/ProductNewForm.js","pages/ResumeUpload.js"],"names":["fPercent","number","numeral","format","fShortenNumber","replace","fData","DropZoneStyle","styled","theme","outline","display","textAlign","alignItems","flexDirection","justifyContent","padding","spacing","borderRadius","shape","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","UploadMultiFile","error","showPreview","files","onRemove","onRemoveAll","sx","other","hasFile","length","useDropzone","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","variant","py","px","mt","borderColor","bgcolor","alpha","main","map","file","errors","path","size","Box","my","Typography","noWrap","e","component","message","code","width","color","p","ml","md","gutterBottom","Link","underline","List","disablePadding","AnimatePresence","name","preview","key","isString","ListItem","motion","div","varFadeInRight","m","height","overflow","position","src","objectFit","top","right","onClick","icon","closeFill","divider","ListItemIcon","fileFill","ListItemText","primary","secondary","primaryTypographyProps","secondaryTypographyProps","ListItemSecondaryAction","edge","Stack","direction","Button","mr","transition","transitions","create","UploadSingleFile","multiple","alt","margin","zIndex","text","easing","easeInOut","duration","shorter","UploadResumeFile","LabelStyle","typography","subtitle2","marginBottom","ProductNewForm","isEdit","currentProduct","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewProductSchema","Yup","required","email","images","min","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","values","a","setSubmitting","resetForm","setErrors","fakeRequest","PATH_PAGE","demo","console","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","useCallback","acceptedFiles","Object","assign","URL","createObjectURL","value","noValidate","autoComplete","Grid","container","item","xs","Card","TextField","fullWidth","label","Boolean","helperText","maxSize","accept","onDrop","filteredItems","filter","_file","FormHelperText","LoadingButton","type","loading","RootStyle","Page","paddingTop","ContentStyle","ResumeUpload","dispatch","useDispatch","pathname","useLocation","useParams","products","useSelector","state","product","includes","find","paramCase","useEffect","getProducts","title","Container","maxWidth","mb"],"mappings":"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","file":"static/js/27.681dd567.chunk.js","sourcesContent":["import { replace } from 'lodash';\r\nimport numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number) {\r\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  return replace(numeral(number).format('0.00a'), '.00', '');\r\n}\r\n\r\nexport function fData(number) {\r\n  return numeral(number).format('0.0 b');\r\n}\r\n","import { isString } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport fileFill from \"@iconify/icons-eva/file-fill\";\r\nimport closeFill from \"@iconify/icons-eva/close-fill\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n// material\r\nimport { alpha, experimentalStyled as styled } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  List,\r\n  Link,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  ListItem,\r\n  Typography,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\n// utils\r\nimport { fData } from \"../../utils/formatNumber\";\r\n//\r\nimport { MIconButton } from \"../@material-extend\";\r\nimport { varFadeInRight } from \"../animate\";\r\nimport { UploadIllustration } from \"../../assets\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DropZoneStyle = styled(\"div\")(({ theme }) => ({\r\n  outline: \"none\",\r\n  display: \"flex\",\r\n  textAlign: \"center\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  padding: theme.spacing(5, 1),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\r\n  \"&:hover\": { opacity: 0.72, cursor: \"pointer\" },\r\n  [theme.breakpoints.up(\"md\")]: { textAlign: \"left\", flexDirection: \"row\" },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadMultiFile.propTypes = {\r\n  error: PropTypes.bool,\r\n  showPreview: PropTypes.bool,\r\n  files: PropTypes.array,\r\n  onRemove: PropTypes.func,\r\n  onRemoveAll: PropTypes.func,\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function UploadMultiFile({\r\n  error,\r\n  showPreview = false,\r\n  files,\r\n  onRemove,\r\n  onRemoveAll,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const hasFile = files.length > 0;\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragReject,\r\n    fileRejections,\r\n  } = useDropzone({\r\n    ...other,\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        mt: 3,\r\n        borderColor: \"error.light\",\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", ...sx }}>\r\n      <DropZoneStyle\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && { opacity: 0.72 }),\r\n          ...((isDragReject || error) && {\r\n            color: \"error.main\",\r\n            borderColor: \"error.light\",\r\n            bgcolor: \"error.lighter\",\r\n          }),\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        <UploadIllustration sx={{ width: 220 }} />\r\n\r\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            Drop or Select file\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\r\n            Drop files here or click&nbsp;\r\n            <Link underline=\"always\">browse</Link>&nbsp;thorough your machine\r\n          </Typography>\r\n        </Box>\r\n      </DropZoneStyle>\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n\r\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\r\n        <AnimatePresence>\r\n          {files.map((file) => {\r\n            const { name, size, preview } = file;\r\n            const key = isString(file) ? file : name;\r\n\r\n            if (showPreview) {\r\n              return (\r\n                <ListItem\r\n                  key={key}\r\n                  component={motion.div}\r\n                  {...varFadeInRight}\r\n                  sx={{\r\n                    p: 0,\r\n                    m: 0.5,\r\n                    width: 80,\r\n                    height: 80,\r\n                    borderRadius: 1.5,\r\n                    overflow: \"hidden\",\r\n                    position: \"relative\",\r\n                    display: \"inline-flex\",\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    variant=\"outlined\"\r\n                    component=\"img\"\r\n                    src={isString(file) ? file : preview}\r\n                    sx={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"cover\",\r\n                      position: \"absolute\",\r\n                    }}\r\n                  />\r\n                  <Box sx={{ top: 6, right: 6, position: \"absolute\" }}>\r\n                    <MIconButton\r\n                      size=\"small\"\r\n                      onClick={() => onRemove(file)}\r\n                      sx={{\r\n                        p: \"2px\",\r\n                        color: \"common.white\",\r\n                        bgcolor: (theme) =>\r\n                          alpha(theme.palette.grey[900], 0.72),\r\n                        \"&:hover\": {\r\n                          bgcolor: (theme) =>\r\n                            alpha(theme.palette.grey[900], 0.48),\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Icon icon={closeFill} />\r\n                    </MIconButton>\r\n                  </Box>\r\n                </ListItem>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <ListItem\r\n                key={key}\r\n                component={motion.div}\r\n                {...varFadeInRight}\r\n                sx={{\r\n                  my: 1,\r\n                  py: 0.75,\r\n                  px: 2,\r\n                  borderRadius: 1,\r\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\r\n                  bgcolor: \"background.paper\",\r\n                }}\r\n              >\r\n                <ListItemIcon>\r\n                  <Icon icon={fileFill} width={28} height={28} />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={isString(file) ? file : name}\r\n                  secondary={isString(file) ? \"\" : fData(size)}\r\n                  primaryTypographyProps={{ variant: \"subtitle2\" }}\r\n                  secondaryTypographyProps={{ variant: \"caption\" }}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <MIconButton\r\n                    edge=\"end\"\r\n                    size=\"small\"\r\n                    onClick={() => onRemove(file)}\r\n                  >\r\n                    <Icon icon={closeFill} />\r\n                  </MIconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </AnimatePresence>\r\n      </List>\r\n\r\n      {hasFile && (\r\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\r\n            Remove all\r\n          </Button>\r\n          <Button variant=\"contained\">Upload files</Button>\r\n        </Stack>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { useDropzone } from 'react-dropzone';\r\n// material\r\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Paper, Box, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fData } from '../../utils/formatNumber';\r\n//\r\nimport { UploadIllustration } from '../../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DropZoneStyle = styled('div')(({ theme }) => ({\r\n  outline: 'none',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(5, 0),\r\n  borderRadius: theme.shape.borderRadius,\r\n  transition: theme.transitions.create('padding'),\r\n  backgroundColor: theme.palette.background.neutral,\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\r\n  '&:hover': {\r\n    opacity: 0.72,\r\n    cursor: 'pointer'\r\n  },\r\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadSingleFile.propTypes = {\r\n  error: PropTypes.bool,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\r\n    multiple: false,\r\n    ...other\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        mt: 3,\r\n        borderColor: 'error.light',\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', ...sx }}>\r\n      <DropZoneStyle\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && { opacity: 0.72 }),\r\n          ...((isDragReject || error) && {\r\n            color: 'error.main',\r\n            borderColor: 'error.light',\r\n            bgcolor: 'error.lighter'\r\n          }),\r\n          ...(file && { padding: '12% 0' })\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        <UploadIllustration sx={{ width: 220 }} />\r\n\r\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            Drop or Select file\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            Drop files here or click&nbsp;\r\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main' }}>\r\n              browse\r\n            </Typography>\r\n            &nbsp;thorough your machine\r\n          </Typography>\r\n        </Box>\r\n\r\n        {file && (\r\n          <Box\r\n            component=\"img\"\r\n            alt=\"file preview\"\r\n            src={isString(file) ? file : file.preview}\r\n            sx={{\r\n              top: 8,\r\n              borderRadius: 1,\r\n              objectFit: 'cover',\r\n              position: 'absolute',\r\n              width: 'calc(100% - 16px)',\r\n              height: 'calc(100% - 16px)'\r\n            }}\r\n          />\r\n        )}\r\n      </DropZoneStyle>\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n    </Box>\r\n  );\r\n}\r\n","import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\r\n// material\r\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Typography, Paper } from '@material-ui/core';\r\n// utils\r\nimport { fData } from '../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 144,\r\n  height: 144,\r\n  margin: 'auto',\r\n  borderRadius: '50%',\r\n  padding: theme.spacing(1),\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`\r\n}));\r\n\r\nconst DropZoneStyle = styled('div')({\r\n  zIndex: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  outline: 'none',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '50%',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  '& > *': { width: '100%', height: '100%' },\r\n  '&:hover': {\r\n    cursor: 'pointer',\r\n    '& .placeholder': {\r\n      zIndex: 9\r\n    }\r\n  }\r\n});\r\n\r\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  color: theme.palette.text.secondary,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  transition: theme.transitions.create('opacity', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&:hover': { opacity: 0.72 }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadAvatar.propTypes = {\r\n  error: PropTypes.bool,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  caption: PropTypes.node,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\r\n    multiple: false,\r\n    ...other\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        my: 2,\r\n        borderColor: 'error.light',\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <RootStyle sx={sx}>\r\n        <DropZoneStyle\r\n          {...getRootProps()}\r\n          sx={{\r\n            ...(isDragActive && { opacity: 0.72 }),\r\n            ...((isDragReject || error) && {\r\n              color: 'error.main',\r\n              borderColor: 'error.light',\r\n              bgcolor: 'error.lighter'\r\n            })\r\n          }}\r\n        >\r\n          <input {...getInputProps()} />\r\n\r\n          {file && (\r\n            <Box\r\n              component=\"img\"\r\n              alt=\"avatar\"\r\n              src={isString(file) ? file : file.preview}\r\n              sx={{ zIndex: 8, objectFit: 'cover' }}\r\n            />\r\n          )}\r\n\r\n          <PlaceholderStyle\r\n            className=\"placeholder\"\r\n            sx={{\r\n              ...(file && {\r\n                opacity: 0,\r\n                color: 'common.white',\r\n                bgcolor: 'grey.900',\r\n                '&:hover': { opacity: 0.72 }\r\n              })\r\n            }}\r\n          >\r\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\r\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\r\n          </PlaceholderStyle>\r\n        </DropZoneStyle>\r\n      </RootStyle>\r\n\r\n      {caption}\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n    </>\r\n  );\r\n}\r\n","// import { isString } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n// material\r\nimport { alpha, experimentalStyled as styled } from \"@material-ui/core/styles\";\r\nimport { Paper, Box, Typography } from \"@material-ui/core\";\r\n// utils\r\nimport { fData } from \"../../utils/formatNumber\";\r\n//\r\n// import { UploadIllustration } from \"../../assets\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DropZoneStyle = styled(\"div\")(({ theme }) => ({\r\n  outline: \"none\",\r\n  display: \"flex\",\r\n  overflow: \"hidden\",\r\n  textAlign: \"center\",\r\n  position: \"relative\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  padding: theme.spacing(5, 0),\r\n  borderRadius: theme.shape.borderRadius,\r\n  transition: theme.transitions.create(\"padding\"),\r\n  backgroundColor: theme.palette.background.neutral,\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\r\n  \"&:hover\": {\r\n    opacity: 0.72,\r\n    cursor: \"pointer\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: { textAlign: \"left\", flexDirection: \"row\" },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadResumeFile.propTypes = {\r\n  error: PropTypes.bool,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function UploadResumeFile({ error, file, sx, ...other }) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragReject,\r\n    fileRejections,\r\n  } = useDropzone({\r\n    multiple: false,\r\n    ...other,\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        mt: 3,\r\n        borderColor: \"error.light\",\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", ...sx }}>\r\n      <Typography textAlign=\"left\" color=\"text.secondary\">\r\n        Upload your resume\r\n      </Typography>\r\n      <DropZoneStyle\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && { opacity: 0.72 }),\r\n          ...((isDragReject || error) && {\r\n            color: \"error.main\",\r\n            borderColor: \"error.light\",\r\n            bgcolor: \"error.lighter\",\r\n          }),\r\n          ...(file && { padding: \"1 0\" }),\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\r\n          <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\r\n            Drop files here or click&nbsp;\r\n            <Typography\r\n              variant=\"body2\"\r\n              component=\"span\"\r\n              sx={{ color: \"primary.main\" }}\r\n            >\r\n              browse\r\n            </Typography>\r\n            &nbsp;thorough your machine\r\n          </Typography>\r\n        </Box>\r\n\r\n        {file && (\r\n          <Box\r\n            component=\"div\"\r\n            sx={{\r\n              top: 8,\r\n              borderRadius: 1,\r\n              objectFit: \"cover\",\r\n              position: \"absolute\",\r\n              width: \"calc(100% - 16px)\",\r\n              height: \"calc(100% - 16px)\",\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\">{file.path}</Typography>\r\n          </Box>\r\n        )}\r\n      </DropZoneStyle>\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n    </Box>\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCallback } from \"react\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport { experimentalStyled as styled } from \"@material-ui/core/styles\";\r\nimport { LoadingButton } from \"@material-ui/lab\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport fakeRequest from \"../../../utils/fakeRequest\";\r\nimport { PATH_PAGE } from \"../../../routes/paths\";\r\nimport { UploadMultiFile } from \"../../upload\";\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\nProductNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentProduct: PropTypes.object,\r\n};\r\n\r\nexport default function ProductNewForm({ isEdit, currentProduct }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewProductSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    email: Yup.string().required(\"Email is required\").email(),\r\n    images: Yup.array().min(1, \"Files is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: currentProduct?.name || \"\",\r\n      email: currentProduct?.email || \"\",\r\n      images: currentProduct?.images || [],\r\n    },\r\n    validationSchema: NewProductSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n        resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar(!isEdit ? \"Create success\" : \"Update success\", {\r\n          variant: \"success\",\r\n        });\r\n        navigate(PATH_PAGE.demo);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    },\r\n  });\r\n\r\n  const {\r\n    errors,\r\n    values,\r\n    touched,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    setFieldValue,\r\n    getFieldProps,\r\n  } = formik;\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFieldValue(\r\n        \"images\",\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFieldValue]\r\n  );\r\n\r\n  const handleRemoveAll = () => {\r\n    setFieldValue(\"images\", []);\r\n  };\r\n\r\n  const handleRemove = (file) => {\r\n    const filteredItems = values.images.filter((_file) => _file !== file);\r\n    setFieldValue(\"images\", filteredItems);\r\n  };\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Full Name\"\r\n                  {...getFieldProps(\"name\")}\r\n                  error={Boolean(touched.name && errors.name)}\r\n                  helperText={touched.name && errors.name}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Email Address\"\r\n                  {...getFieldProps(\"email\")}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  helperText={touched.email && errors.email}\r\n                />\r\n\r\n                <div>\r\n                  <LabelStyle>Add Files</LabelStyle>\r\n                  <UploadMultiFile\r\n                    showPreview\r\n                    maxSize={3145728}\r\n                    accept=\"image/*\"\r\n                    files={values.images}\r\n                    onDrop={handleDrop}\r\n                    onRemove={handleRemove}\r\n                    onRemoveAll={handleRemoveAll}\r\n                    error={Boolean(touched.images && errors.images)}\r\n                  />\r\n                  {touched.images && errors.images && (\r\n                    <FormHelperText error sx={{ px: 2 }}>\r\n                      {touched.images && errors.images}\r\n                    </FormHelperText>\r\n                  )}\r\n                </div>\r\n\r\n                <Box\r\n                  sx={{ mt: 3, display: \"flex\", justifyContent: \"flex-end\" }}\r\n                >\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    loading={isSubmitting}\r\n                  >\r\n                    Submit\r\n                  </LoadingButton>\r\n                </Box>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","// material\r\nimport { experimentalStyled as styled } from \"@material-ui/core/styles\";\r\n// components\r\nimport Page from \"../components/Page\";\r\nimport { useEffect } from \"react\";\r\nimport { paramCase } from \"change-case\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from \"../redux/store\";\r\nimport { getProducts } from \"../redux/slices/product\";\r\nimport ProductNewForm from \"../components/_external-pages/resume-upload/ProductNewForm\";\r\nimport { Container, Grid, Stack, Typography } from \"@material-ui/core\";\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  paddingTop: theme.spacing(8),\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    paddingTop: theme.spacing(11),\r\n  },\r\n}));\r\n\r\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  textAlign: \"center\",\r\n  marginBottom: theme.spacing(10),\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    textAlign: \"left\",\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nexport default function ResumeUpload() {\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n  const { name } = useParams();\r\n  const { products } = useSelector((state) => state.product);\r\n  const isEdit = pathname.includes(\"edit\");\r\n  const currentProduct = products.find(\r\n    (product) => paramCase(product.name) === name\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <RootStyle title=\"About us | Minimal-UI\">\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={12}\r\n          sx={{ display: \"flex\", alignItems: \"center\", px: 4, py: 10 }}\r\n        >\r\n          <ContentStyle>\r\n            <Stack\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Grid\r\n                container\r\n                spacing={5}\r\n                justifyContent=\"center\"\r\n                sx={{ mb: 6 }}\r\n              >\r\n                <Stack direction=\"column\" textAlign=\"center\">\r\n                  <Typography variant=\"h3\" color=\"primary\" gutterBottom>\r\n                    Resume Parsing software\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom>\r\n                    upload your resume (PDF or Word) for resume parsing\r\n                  </Typography>\r\n                </Stack>\r\n              </Grid>\r\n              <ProductNewForm isEdit={isEdit} currentProduct={currentProduct} />\r\n            </Stack>\r\n          </ContentStyle>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}